/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    bool isPalindrome(ListNode* head) {
        vector<int> num1;
        vector<int> num2;
        stack<int> st;
        ListNode* temp=head;
        while(temp){
            num1.push_back(temp-> val);
            st.push(temp->val);
            temp=temp->next;
        }
        while(!st.empty()){
            num2.push_back(st.top());
            st.pop();

        }
        for(int i=0;i<min(num1.size(),num2.size());i++){
            if(num1[i]!=num2[i]) return false;
        }
        return true;

    }
};
